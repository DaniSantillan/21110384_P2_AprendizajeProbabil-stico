import numpy as np
import matplotlib.pyplot as plt
from sklearn import svm
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Crear un conjunto de datos sintético
X, y = make_classification(n_samples=100, n_features=2, n_informative=2, n_redundant=0, random_state=42)

# Dividir el conjunto de datos en entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear un clasificador SVM con un núcleo gaussiano (RBF)
clf = svm.SVC(kernel='rbf', probability=True, random_state=42)

# Entrenar el clasificador
clf.fit(X_train, y_train)

# Realizar predicciones en el conjunto de prueba
y_pred = clf.predict(X_test)

# Calcular la precisión del modelo
accuracy = accuracy_score(y_test, y_pred)
print(f'Precisión del modelo: {accuracy * 100:.2f}%')

# Calcular probabilidades para las predicciones
probabilities = clf.predict_proba(X_test)[:, 1]

# Graficar los resultados
plt.scatter(X_test[:, 0], X_test[:, 1], c=probabilities, cmap='viridis')
plt.colorbar()
plt.title('Clasificación con SVM y Núcleo RBF')
plt.show()
